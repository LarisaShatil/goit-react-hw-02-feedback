{"version":3,"sources":["App.js","index.js"],"names":["App","state","good","neutral","bad","handleFeedback","e","name","currentTarget","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","className","type","onClick","this","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAGMA,E,4MAOJC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAIPC,eAAiB,SAACC,GAChB,IAAQC,EAASD,EAAEE,cAAXD,KACR,EAAKE,UAAS,SAAAC,GAAS,sBACpBH,EAAOG,EAAUH,GAAQ,O,EAK9BI,mBAAqB,WACnB,MAA+B,EAAKV,MACpC,OADA,EAAQC,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzBQ,gCAAkC,WAChC,OAAOC,KAAKC,MAAyB,IAAlB,EAAKb,MAAMC,KAAc,EAAKS,uB,4CAInD,WACE,OACE,sBAAKI,UAAU,MAAf,UACE,2CACA,kCACE,sBAAKA,UAAU,UAAf,UACE,6DACA,wBAAQC,KAAK,SAASC,QAASC,KAAKb,eAAgBE,KAAK,OAAzD,+BACA,wBAAQS,KAAK,SAASC,QAASC,KAAKb,eAAgBE,KAAK,UAAzD,kCACA,wBAAQS,KAAK,SAASC,QAASC,KAAKb,eAAgBE,KAAK,MAAzD,mCAGJ,oCACE,4CACA,+BACE,qBAAIA,KAAK,OAAT,mBAAuBW,KAAKjB,MAAMC,QAClC,qBAAIK,KAAK,UAAT,sBAA6BW,KAAKjB,MAAME,WACxC,qBAAII,KAAK,MAAT,kBAAqBW,KAAKjB,MAAMG,OAChC,yCAAac,KAAKP,wBAClB,sDAAyBO,KAAKN,kCAA9B,qB,GApDMO,aAAZnB,EACGoB,aAAe,CACpBlB,KAAM,EACNC,QAAS,EACTC,IAAK,GAyDMJ,QC3DfqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6efdba3f.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  static defaultProps = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n// adding feedbacks\n  handleFeedback = (e) => {\n    const { name } = e.currentTarget;\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n// total sum \n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return (good + neutral + bad);\n  };\n\n// percent of positive feedbacks\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good * 100) / this.countTotalFeedback());\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Feedbacks</h1>\n        <section>\n          <div className=\"counter\">\n            <h2>Please leave your feedback:</h2>\n            <button type=\"button\" onClick={this.handleFeedback} name='good'>😍 Good</button>\n            <button type=\"button\" onClick={this.handleFeedback} name='neutral'>😐 Neutral</button>\n            <button type=\"button\" onClick={this.handleFeedback} name='bad'>😕 Bad</button>\n          </div>\n        </section>\n        <section>\n          <h2>Statistics</h2>\n          <ul>\n            <li name='good'>Good: {this.state.good}</li>\n            <li name='neutral'>Neutral: {this.state.neutral}</li>\n            <li name='bad'>Bad: {this.state.bad}</li>\n            <li>Total: { this.countTotalFeedback() }</li>\n            <li>Positive feedbacks: {this.countPositiveFeedbackPercentage()} %</li>\n          </ul>\n        </section>\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}
{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","components/FeedbackOptions/FeedbackOptions.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","s","list","item","Section","props","title","children","section","Notification","message","FeedbackOptions","handleFeedback","btn","type","onClick","name","App","state","e","currentTarget","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,gBCAzDD,EAAOC,QAAU,CAAC,IAAM,+B,qBCAxBD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,iC,gBCArED,EAAOC,QAAU,CAAC,QAAU,gC,uLCuBbC,MArBf,YAAsE,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,mBAC7C,OACE,mCACI,qBAAIC,UAAWC,IAAEC,KAAjB,UACE,qBAAIF,UAAWC,IAAEE,KAAjB,mBAA8BR,KAC9B,qBAAIK,UAAWC,IAAEE,KAAjB,sBAAiCP,KACjC,qBAAII,UAAWC,IAAEE,KAAjB,kBAA6BN,KAC7B,qBAAIG,UAAWC,IAAEE,KAAjB,oBAAgCL,KAChC,qBAAIE,UAAWC,IAAEE,KAAjB,iCAA4CJ,EAA5C,c,gBCWGK,MAlBf,SAAiBC,GACf,IAAQC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SAEf,OACE,mCACE,0BAASP,UAAWC,IAAEO,QAAtB,UACE,oBAAIR,UAAU,gBAAd,SAAgCM,IAC/BC,Q,iBCAME,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,mBAAGV,UAAWC,IAAES,QAAhB,SAA2BA,K,gBCarBC,MAdf,YAA4C,IAAlBC,EAAiB,EAAjBA,eACxB,OACE,qCACE,wBAAQZ,UAAWC,IAAEY,IAAKC,KAAK,SAASC,QAASH,EAAgBI,KAAK,OAAtE,+BACA,wBAAQhB,UAAWC,IAAEY,IAAKC,KAAK,SAASC,QAASH,EAAgBI,KAAK,UAAtE,kCACA,wBAAQhB,UAAWC,IAAEY,IAAKC,KAAK,SAASC,QAASH,EAAgBI,KAAK,MAAtE,kCCDAC,G,kNACJC,MAAQ,CACNvB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAIPe,eAAiB,SAACO,GAChB,IAAQH,EAASG,EAAEC,cAAXJ,KACR,EAAKK,UAAS,SAAAC,GAAS,sBACpBN,EAAOM,EAAUN,GAAQ,O,EAK9BO,mBAAqB,WACnB,MAA+B,EAAKL,MACpC,OADA,EAAQvB,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzB2B,gCAAkC,WAChC,OAAOC,KAAKC,MAAyB,IAAlB,EAAKR,MAAMvB,KAAc,EAAK4B,uB,4CAInD,WACE,MAA+BI,KAAKT,MAA5BvB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAChBe,EAAuEe,KAAvEf,eAAgBW,EAAuDI,KAAvDJ,mBAAoBC,EAAmCG,KAAnCH,gCAC3C,OACE,sBAAKxB,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,CAASM,MAAM,8BAAf,SACE,cAAC,EAAD,CACAM,eAAgBA,MAGlB,cAAC,EAAD,CAASN,MAAM,aAAf,SAEGiB,IACY,cAAC,EAAD,CACX5B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOyB,IACPxB,mBAAoByB,MAGlB,cAAC,EAAD,CAAcd,QAAQ,gC,GAjDlBkB,cAyDHX,IC3DfY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.83cdcb2a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__219cM\",\"item\":\"Statistics_item__2cqfO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__3UEUj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3LXcl\",\"section_title\":\"Section_section_title__YVmCZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__3G-33\"};","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nfunction Statistics ({good, neutral, bad, total, positivePercentage}){\r\n    return (\r\n      <>\r\n          <ul className={s.list}>\r\n            <li className={s.item}>Good: {good}</li>\r\n            <li className={s.item}>Neutral: {neutral}</li>\r\n            <li className={s.item}>Bad: {bad}</li>\r\n            <li className={s.item}>Total: { total}</li>\r\n            <li className={s.item}>Positive feedbacks: {positivePercentage} %</li>\r\n          </ul>\r\n      </>\r\n    )\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Section.module.css'\r\n\r\nfunction Section(props) {\r\n  const { title, children } = props;\r\n\r\n  return (\r\n    <>\r\n      <section className={s.section}>\r\n        <h2 className=\"section_title\">{ title}</h2>\r\n        {children}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nfunction Notification({ message }) {\r\n  return <p className={s.message}>{ message}</p>\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nfunction FeedbackOptions({handleFeedback}) {\r\n  return (\r\n    <>\r\n      <button className={s.btn} type=\"button\" onClick={handleFeedback} name='good'>üòç Good</button>\r\n      <button className={s.btn} type=\"button\" onClick={handleFeedback} name='neutral'>üòê Neutral</button>\r\n      <button className={s.btn} type=\"button\" onClick={handleFeedback} name='bad'>üòï Bad</button>\r\n    </>\r\n  )\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  handleFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import { Component } from 'react';\nimport  Statistics from './components/Statistics/Statistics';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n// adding feedbacks\n  handleFeedback = (e) => {\n    const { name } = e.currentTarget;\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n// total sum \n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return (good + neutral + bad);\n  };\n\n// percent of positive feedbacks\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good * 100) / this.countTotalFeedback());\n\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state\n    const {handleFeedback, countTotalFeedback, countPositiveFeedbackPercentage} = this\n    return (\n      <div className=\"App\">\n        <h1>Feedbacks</h1>\n        <Section title=\"Please leave your feedback:\">\n          <FeedbackOptions\n          handleFeedback={handleFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {/* render on condition */}\n          {countTotalFeedback() ?\n            (          <Statistics \n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n            />) :\n            (\n              <Notification message=\"No feedbacks given\"/>\n            )}\n        </Section>\n      </div>\n    )\n  }\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}